# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Mantil < Formula
  desc "Go Development Toolkit for AWS"
  homepage "https://www.mantil.com"
  version "0.2.12"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "releases.mantil.io/v0.2.12/mantil_0.2.12_Darwin_arm64.tar.gz"
      sha256 "41042db160aeaf46c9dfbc2c505ec319b6bb34171c00ed253be65b20b15e0159"

      def install
        bin.install "mantil"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "bash")
        (bash_completion/"mantil").write output

        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "zsh")
        (zsh_completion/"_mantil").write output

        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "fish")
        (fish_completion/"mantil.fish").write output
      end
    end
    if Hardware::CPU.intel?
      url "releases.mantil.io/v0.2.12/mantil_0.2.12_Darwin_x86_64.tar.gz"
      sha256 "a89cb58e69d5f9d268bb6117b1e2071aff70fc44394d4403ae7a0498fc581fae"

      def install
        bin.install "mantil"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "bash")
        (bash_completion/"mantil").write output

        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "zsh")
        (zsh_completion/"_mantil").write output

        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "fish")
        (fish_completion/"mantil.fish").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "releases.mantil.io/v0.2.12/mantil_0.2.12_Linux_armv6.tar.gz"
      sha256 "0fa468da54425a5568e9eb5a1e5a9442370eced46ab2cee0a39d90ab35c5c73d"

      def install
        bin.install "mantil"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "bash")
        (bash_completion/"mantil").write output

        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "zsh")
        (zsh_completion/"_mantil").write output

        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "fish")
        (fish_completion/"mantil.fish").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "releases.mantil.io/v0.2.12/mantil_0.2.12_Linux_arm64.tar.gz"
      sha256 "bcc3c5d4238f7f466ac41f2a1ea247d84f0e470b1a2628dd15f07caf847bde8d"

      def install
        bin.install "mantil"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "bash")
        (bash_completion/"mantil").write output

        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "zsh")
        (zsh_completion/"_mantil").write output

        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "fish")
        (fish_completion/"mantil.fish").write output
      end
    end
    if Hardware::CPU.intel?
      url "releases.mantil.io/v0.2.12/mantil_0.2.12_Linux_x86_64.tar.gz"
      sha256 "47ad19970718839d3d6d333bc4c88528a5dceac2a8e2773e719d9274aae8ea05"

      def install
        bin.install "mantil"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "bash")
        (bash_completion/"mantil").write output

        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "zsh")
        (zsh_completion/"_mantil").write output

        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "fish")
        (fish_completion/"mantil.fish").write output
      end
    end
  end
end
