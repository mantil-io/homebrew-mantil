# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Mantil < Formula
  desc "Go Development Toolkit for AWS"
  homepage "https://www.mantil.com"
  version "0.2.11"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "releases.mantil.io/v0.2.11/mantil_0.2.11_Darwin_arm64.tar.gz"
      sha256 "61f06abf3f55e8a361e8cf0ea8b182f4f402ee70d55e6cae07e9326de31ef4da"

      def install
        bin.install "mantil"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "bash")
        (bash_completion/"mantil").write output

        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "zsh")
        (zsh_completion/"_mantil").write output

        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "fish")
        (fish_completion/"mantil.fish").write output
      end
    end
    if Hardware::CPU.intel?
      url "releases.mantil.io/v0.2.11/mantil_0.2.11_Darwin_x86_64.tar.gz"
      sha256 "c380b8cd6061cd58dfe895df38254f618cdecde188dded59eaa21dec123f3c3d"

      def install
        bin.install "mantil"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "bash")
        (bash_completion/"mantil").write output

        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "zsh")
        (zsh_completion/"_mantil").write output

        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "fish")
        (fish_completion/"mantil.fish").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "releases.mantil.io/v0.2.11/mantil_0.2.11_Linux_armv6.tar.gz"
      sha256 "aae035158ba8bdf162068153b3f3e1dc987e60aba5a22c4cc2189c6ab712f11b"

      def install
        bin.install "mantil"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "bash")
        (bash_completion/"mantil").write output

        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "zsh")
        (zsh_completion/"_mantil").write output

        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "fish")
        (fish_completion/"mantil.fish").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "releases.mantil.io/v0.2.11/mantil_0.2.11_Linux_arm64.tar.gz"
      sha256 "2c2258f1345dab39d35d694a85957dae5498e1664900e7e9a861437371f5a5a9"

      def install
        bin.install "mantil"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "bash")
        (bash_completion/"mantil").write output

        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "zsh")
        (zsh_completion/"_mantil").write output

        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "fish")
        (fish_completion/"mantil.fish").write output
      end
    end
    if Hardware::CPU.intel?
      url "releases.mantil.io/v0.2.11/mantil_0.2.11_Linux_x86_64.tar.gz"
      sha256 "3f09a1266bee5c644eeb55f18429e1adc204c3e50f5120c5b5aea8bb9c74e153"

      def install
        bin.install "mantil"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "bash")
        (bash_completion/"mantil").write output

        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "zsh")
        (zsh_completion/"_mantil").write output

        output = Utils.safe_popen_read("#{bin}/mantil", "completion", "fish")
        (fish_completion/"mantil.fish").write output
      end
    end
  end
end
